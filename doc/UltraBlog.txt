*UltraBlog.txt*
==============================================================================
  UltraBlog                                                        *UltraBlog*
==============================================================================

Author:      Lenin Lee   lenin.lee at gmail dot com       *UltraBlog_Author*
URL:         http://0x3f.org                              *UltraBlog_URL*
Description: Ultimate vim blogging plugin.                |UltraBlog_Motivation|
Version:     3.6.0                                        |UltraBlog_History|
License:     New BSD                                      |UltraBlog_License|
Contribute:  Please report any bugs or suggestions        |UltraBlog_Bugs|
             to the address above.                        |UltraBlog_Future|

==============================================================================
  Table of Contents                                        *UltraBlog_Contents*
==============================================================================

             1. Motivation.................|UltraBlog_Motivation|
             2. Features...................|UltraBlog_Features|
             3. Concepts...................|UltraBlog_Concepts|
                3.1 Modes..................|UltraBlog_Modes|
                3.2 Items..................|UltraBlog_Items|
                3.3 Syntaxes...............|UltraBlog_Syntaxes|
                3.4 Scopes.................|UltraBlog_Scopes|
                3.5 Status.................|UltraBlog_Statuses|
             4. Prerequisites..............|UltraBlog_Prerequisites|
             5. Keymaps....................|UltraBlog_Keymaps|
             6. Commands...................|UltraBlog_Commands|
             7. Options....................|UltraBlog_Options|
             8. Bugs.......................|UltraBlog_Bugs|
             9. Future.....................|UltraBlog_Future|
            10. History....................|UltraBlog_History|
            11. License....................|UltraBlog_License|

==============================================================================
  Motivation                                             *UltraBlog_Motivation*
==============================================================================

UltraBlog.vim is yet another Vim blogging script for Wordpress.

The biggest difference between UB and other similar scripts is that UB is an 
ultimate client, which stores posts locally in an SQLite database, while others 
just operate remotely. In this way, many things can be done easily by the 
advantage of local storage and many other utilities, for example, you can search 
for posts stored in the database with a few keywords by typing a simple command, 
also you can preview drafts with any of your favorite templates as soon as you 
want to.

For those who just needs a lightweight blog editor similar as other Vim blogging 
scripts, UB also comes with an Editor Mode, which doesn't create a database and 
store data in it.

In addition, UB is tending to make life easier for writing posts with many kinds 
of lightweight markup languages, currently the following kinds are supported: 
Markdown, reStructuredText, LaTeX, Textile and of cause HTML.

Enjoy Vim blogging !

==============================================================================
  Features                                                 *UltraBlog_Features*
==============================================================================

* Multiple syntax support: Markdown, HTML, reStructuredText, LaTeX, Textile.
* Editor mode and client mode.
* Data is stored in a local SQLite database in client mode.
* Full-text search with keywords highlighted.
* Full-text search by using regular expressions.
* Full-text substitutions.
* Full-text substitutions using regular expressions.
* Templates for previewing posts.
* Built-in web browser, much faster to preview items.
* Event-driven system.
* I18N.

==============================================================================
  Concepts                                                 *UltraBlog_Concepts*
==============================================================================

UltraBlog.vim makes life easier while writing or updating blogs. It stores
posts/pages in a local SQLite database. You can also set it to editor mode, in
which UltraBlog.vim does not store data locally, just like other Vim blogging 
scripts.

------------------------------------------------------------------------------

By default, UltraBlog.vim is in client mode. You can set it to use editor mode
by adding the fallowing line to the vimrc file:

  Modes                                                       *UltraBlog_Modes*

    let ub_editor_mode = 1

------------------------------------------------------------------------------

  Items                                                       *UltraBlog_Items*

Currently, UltraBlog.vim manages three items: post, page and tmpl. "tmpl" 
is the shorthand of "template".

                                                           *UltraBlog_Template*

Templates are used to preview the current post/page in the browser locally.
This feature is a reparation for the remote previewing, due to the limit of
the API, users cannot send a post to Wordpress as draft and preview it without
affecting the post status if the post has been published.

With templates, users can preview posts/pages directly in the browser in a 
pre-defined style. They can create as many templates as they like and
customize the look with CSS and HTML, or even Javascript.

Templates should be formatted as a valid python template string, that is, use
the following avaliable placeholders and escape any literal '%' with another 
'%':

    %(title)s
        The title of the current post/page.

    %(content)s
        The content of the current post/page.

    %%
        A literal '%'.

There is a default template in the database, whose name is 'default', which
can be used as an example of template.

Users can specify the default template to use with the option
|ub_default_template|.

------------------------------------------------------------------------------

  Syntaxes                                                 *UltraBlog_Syntaxes*

The syntaxes supported by UltraBlog.vim currently are:

    markdown, html, rst, textile, latex.

------------------------------------------------------------------------------

  Statuses                                                 *UltraBlog_Statuses*

The available statuses are:

    publish, private, draft, pending.

------------------------------------------------------------------------------

  Scopes                                                     *UltraBlog_Scopes*

Scopes tells UltraBlog.vim to operate on items in which place, "local" stands 
for items stored in the database, and "remote" stands for the blog.

==============================================================================
  Prerequisites                                       *UltraBlog_Prerequisites*
==============================================================================

UltraBlog.vim requires the following softwares to work normally:

    * Vim with python support enabled
    * SQLAlchemy 0.7 or newer
    + python-markdown or python-markdown2 (Recommanded)
    + python-html2text
    + pandoc or other (Only if syntaxes other than Markdown and HTML are used)
    + pywebkitgtk (Only if the built-in web browser is used)

The asterisk items are required at any condition.

One of the two markdown modules of python is needed if you want to convert 
posts/pages from Markdown to HTML. python-markdown2 is recommanded.

The python-html2text module is needed when converts buffers from HTML to
Markdown.

pandoc is requried when you need to do conversions between any pair of the 
avaliable syntaxes. You can also specify you own external command as the 
converter. For more information, refer to help messages of options below.

pywebkitgtk is required only if you use the built-in web browser to preview
items. You can still use the system default web browser like firefox or 
chromium to do this job, just set the option |ub_use_ubviewer| to 0.

==============================================================================
  Keymappings                                           *UltraBlog_Keymappings*
==============================================================================

All keymappings can be customized by setting some options, refer to
|UltraBlog_Options| for detail information.

<c-pageup>    - Shift to previous page in local post list.
<c-pagedown>  - Shift to next page in local post list.
<del>         - Delete the post under cursor in post list.
<enter>       - Open the post/page under cursor in the current view, if is in 
                remote post list, posts which are not in local database will 
                be saved to it before opened.
<s-enter>     - Open the post/page under cursor in a new splitted window.
<c-enter>     - Open the post/page under cursor in a new tab.

==============================================================================
  Commands                                                 *UltraBlog_Commands*
==============================================================================

:UBNew [item [syntax/template_name]]                                   *:UBNew*
    Create a new item.

    For the first parameter, refer to |UltraBlog_Items|. The default value is
    "post".

    If "item" is either "post" or "page", the second parameter must be a syntax 
    name, refer to |UltraBlog_Syntaxes|. The default value is "markdown".

    If "item" is "tmpl", the second parameter should be the name of the new 
    template.

:UBPreview [status/template name]                                  *:UBPreview*
    Preview the current buffer.

    If any of the |UltraBlog_Statuses| is given, the current buffer will be sent
    to the blog and then opened in the browser with a parameter "preview" 
    appended to the URL.

    If the given parameter is not a post status, a pre-defined template whose
    name is the same with the parameter will be used to preview the buffer
    locally.

    If none is given, the default template is used.
    
    You do not have to care for which syntax you use, markdown source will be 
    translated into html automatically before a browser window is opened to 
    display it.

:UBSave                                                               *:UBSave*
    Save modifications. After executing this command, the current buffer is 
    saved into database.

:UBSend [status]                                                      *:UBSend*
    Post an item. If no parameter is given, UltraBlog.vim will send the item 
    to blog and set it to be the value stored in the meta information area.

    Refer to |UltraBlog_Statuses|.

:UBList [item [scope [page_size [page_no]]]]                          *:UBList*
    List items.

    Refer to |UltraBlog_Items| for the first parameter. The default value of 
    this parameter is "post".

    The second parameter "scope" is only available when "item" is either 
    "post" or "page". Refer to |UltraBlog_Scopes|.

    "page_size" and "page_no" are both for the situation when "item" is 
    "post" and "scope" is "local". The former stands for how many item will 
    be listed a page. The latter stands for the page number.

    For example:

    :UBList

    This command lists the first page of local posts, by default, posts which 
    have not been posted to blog are listed before the posted ones, and there 
    are |ub_local_pagesize| posts a page.

    :UBList post local 20 3

    This command lists the third page of local posts, 20 posts a page. As you 
    see, you can use this command to scroll forward or back between pages. As 
    a matter of fact, there are two key mappings within local post list:

      * CTRL+PageDown
      * CTRL+PageUp

    :UBList post remote 50

    This command lists the latest 50 posts in the blog.

    Pressing the ENTER key in a remote post list will open the post under 
    cursor and save it to the local database if it is not in it, otherwise, 
    the local copy will be opened instead of the remote one. This enables 
    users to modify markdown source and update the remote post.

    The remote post list doesn't support paging.

:UBOpen {item} {post_id/template_name} [scope]                        *:UBOpen*
    Open an item. 

    For the first parameter, refer to |UltraBlog_Items|.

    If "item" is either "post" or "page", the second parameter should be value
    of its id. If it's "tmpl", the name.

    For "scope", refer to |UltraBlog_Scopes|. The default value is "local".

:UBDel {item} {post_id/template_name} [scope]                          *:UBDel*
    Delete an item.
    
    Refer to |UBOpen| for the usage of these options.

    You can also delete items in the list by pressing the DELETE button on 
    the target. In a local post list, if the post to be deleted has been 
    posted to the blog, a confirmation will be prompted for you to decide 
    whether to delete the remote copy cascadly.

:UBUpload {file_path}                                               *:UBUpload*
    Upload media. This command can only be executed in a post edit view, and 
    the URL of the uploaed file will be appended in that buffer.

:UBThis [item [to_syntax [from_syntax]]                               *:UBThis*
    Create a new post or page which is filled with content in the current 
    buffer. 
    
    If no parameter is specified, the first parameter will be default to 
    "post"; for the second and the third one, the syntax of the current buffer
    is used.

    Content of the current buffer will be automatically converted from the
    [from_syntax] to the [to_syntax].

:UBConv {to_syntax} [from_syntax]                                     *:UBConv*
    Convert the current buffer from 'from_syntax' to 'to_syntax'.

    Refer to |UltraBlog_Syntaxes|.

    If you only need to convert from Markdown to HTML, only python-markdown or
    python-markdown2 module is required.

    If you need to do conversion from HTML to Markdown, you need to install
    python-html2text.

    For other conversion scenarios, you must install pacdoc or use the 
    options: |ub_converter_command|, |ub_converter_options|,
    |ub_converter_option_from|, |ub_converter_option_to| to specify a valid 
    external command.

:UBRefresh                                                         *:UBRefresh*
    Refresh the current buffer.

:UBFind keyword1 [keyword2 ...]                                       *:UBFind*
    Doing full-text searches for both posts and pages by keywords, all 
    keywords will be highlighted. Page size of the search result list is 
    controlled by |ub_search_pagesize|.

:UBRegexSearch regexp1 [regexp2 ...]                           *:UBRegexSearch*
    Doing full-text searches for both posts and pages by regular expressions, 
    all strings that match the regular expressions will be highlighted. Page 
    size of the search result list is controlled by |ub_search_pagesize|.

:UBReplace needle replacement                                      *:UBReplace*
    Doing full-text substitutions.

    Attention: Full-text substitutions will change contents of all matched 
    posts/pages immediately when executed. You may need to backup your 
    database file first.

:UBRegexReplace regexp replacement                            *:UBRegexReplace*
    Doing full-text substitutions using regular expressions.

    Attention: Full-text substitutions will change contents of all matched 
    posts/pages immediately when executed. You may need to backup your 
    database file first.

:UBEnableDebug                                                 *:UBEnableDebug*
    Enable debugging.

:UBDisableDebug                                               *:UBDisableDebug*
    Disable debugging.

:UBToggleDebug                                                 *:UBToggleDebug*
    Toggle debugging status.

==============================================================================
  Options                                                   *UltraBlog_Options*
==============================================================================

ub_blog                                                               *ub_blog*

    Example:
        let ub_blog = {'login_name':'admin',
                    \'password':'pass2011',
                    \'url':'http://www.sample.com/',
                    \'xmlrpc_uri':'xmlrpc.php',
                    \'db':'$VIM/UltraBlog.db'
                    \}
    Keys:
        db
            Use any path string that can be expanded as a normal fullpath by
            the function 'expand()'.

------------------------------------------------------------------------------

ub_editor_mode                                                 *ub_editor_mode*

    Set this option to 1 will force UltraBlog.vim not to store data in a local
    SQLite database. You can still use most of the functions UltraBlog.vim
    supplies, especially those which are used to manage blogs remotely.
    
    In one word, this mode works just like other Vim blogging scripts.

------------------------------------------------------------------------------

ub_local_pagesize                                           *ub_local_pagesize*

    Default pagesize for local post list. If not specified, the default value
    is 30.

------------------------------------------------------------------------------

ub_remote_pagesize                                         *ub_remote_pagesize*

    Default pagesize for remote post list. If not specified, the default value
    is 10.

------------------------------------------------------------------------------

ub_search_pagesize                                         *ub_search_pagesize*

    Default pagesize for search result list. If not specified, the default 
    value is 30.

------------------------------------------------------------------------------

ub_append_promotion_link                             *ub_append_promotion_link*

    If this option has been set to 1, a promotion link will be appended at the
    end of current buffer after |:UBNew| is executed.

    Proudly show your visitors that you are blogging with the world's most 
    powerful editor.

------------------------------------------------------------------------------

ub_list_col1_width                                         *ub_list_col1_width*
ub_list_col2_width                                         *ub_list_col2_width*
ub_list_col3_width                                         *ub_list_col3_width*

    Column widths of post or page lists.
    col1 for the local id column, whose default value is 10.
    col2 for the remote id column, whose default value is 10.
    col3 for the status column, whose default value is 10.

------------------------------------------------------------------------------

ub_save_after_opend                                      *ub_save_after_opened*
ub_save_after_sent                                         *ub_save_after_sent*

    If the above options are set to 1, posts/pages will be saved to database
    immediately after they are opened from or sent to the blog.

    By default, their values are 0s.

------------------------------------------------------------------------------

ub_converter_command                                     *ub_converter_command*

    This is the command needed to do conversions between the avaliable
    syntaxes.

    By default, the value is:

        'pandoc'

------------------------------------------------------------------------------

ub_converter_options                                     *ub_converter_options*

    A list of options to be appended to the |ub_converter_command|.

    By default, the value is:

        ['--reference-links']

------------------------------------------------------------------------------

ub_converter_option_from                             *ub_converter_option_from*

    A template string which will be filled with the 'from_syntax' and appended
    to the |ub_converter_command|.

    By default, the value is:

        '--from=%s'

------------------------------------------------------------------------------

ub_converter_option_to                                 *ub_converter_option_to*

    A template string which will be filled with the 'to_syntax' and appended
    to the |ub_converter_command|.

    By default, the value is:

        '--to=%s'

------------------------------------------------------------------------------

ub_hotkey_open_item_in_current_view       *ub_hotkey_open_item_in_current_view*

    Set the hotkey to be used when to open a post/page in the list view. When
    invoked, the list view will be reused.

    By default, the value is:

    let ub_hotkey_open_item_in_current_view='<enter>'

------------------------------------------------------------------------------

ub_hotkey_open_item_in_splitted_view     *ub_hotkey_open_item_in_splitted_view*

    Set the hotkey to be used when to open a post/page in the list view. When
    invoked, the post/page will be displayed in a new splitted window.

    By default, the value is:

    let ub_hotkey_open_item_in_splitted_view='<s-enter>'

------------------------------------------------------------------------------

ub_hotkey_open_item_in_tabbed_view         *ub_hotkey_open_item_in_tabbed_view*

    Set the hotkey to be used when to open a post/page in the list view. When
    invoked, the post/page will be displayed in a new tab.

    By default, the value is:

    let ub_hotkey_open_item_in_tabbed_view='<c-enter>'

------------------------------------------------------------------------------

ub_hotkey_delete_item                                   *ub_hotkey_delete_item*

    Set the hotkey to be used when to delete a post/page in the list view. 
    When invoked, the post/page will be deleted after a confirmation.

    By default, the value is:

    let ub_hotkey_delete_item='<del>'

------------------------------------------------------------------------------

ub_hotkey_save_current_item                       *ub_hotkey_save_current_item*

    Set the hotkey to execute |:UBSave|.

    By default, the value is:

    let ub_hotkey_save_current_item='<c-s>'

------------------------------------------------------------------------------

ub_socket_timeout                                           *ub_socket_timeout*

    The timeout period of xmlrpc operations. The value is a positive integer,
    whose unit is second.

    By default, the value is:

    let ub_socket_timeout=10

------------------------------------------------------------------------------

ub_tmpl_img_url                                               *ub_tmpl_img_url*

    Set the link template for images uploaded by |:UBUpload|. This string 
    should be a template string valid for python to format printing, and every
    placeholder must be among the keys of the dictionary returned by the
    wordpress API method newMediaObject().

    Structure of the dictionary:

        {'url':'http://xxx/z.jpg', 'file':'z.jpg', 'type':'image/x-jpg'}

    By default, the value is:
        
        let ub_tmpl_img_url="markdown###![%(file)s][]\n[%(file)s]:%(url)s"

    As is illustrated, the template string should be appended with its syntax.
    A tripple sharp sign '###' is used to devide the syntax and the template.
    This is used to auto convert the template to the syntax the current buffer
    has. If you don't need this, you can just simply ignore the appending
    syntax and '###'.

------------------------------------------------------------------------------

ub_default_template                                       *ub_default_template*

    Set the default template to be used to preview the current buffer in the 
    browser.

    By default, the value is:

    let ub_default_template="default"

------------------------------------------------------------------------------

ub_debug                                                             *ub_debug*

    Whether or not to enable debugging. Setting this option to 1 enables 
    debugging and 0 disables it.

    In debug mode, SQL statements being executed will be displayed and so are
    all stack traces of exceptions raised.

    By default, the value is:

    let ub_debug = 0

------------------------------------------------------------------------------

ub_use_ubviewer                                               *ub_use_ubviewer*

    Whether or not to use the built-in tiny browser to preview items.

    Note that GTK warnings may be displayed if you start Vim or GVim in your
    terminal emulator due to GTK or others' bugs. If this bothers you, set
    this option to 0.

    By default, the value is:

    let ub_use_ubviewer = 1

==============================================================================
  Future                                                     *UltraBlog_Future*
==============================================================================

    * The future of UltraBlog.vim depends on you, send me your advices.
    * Write a syntax file for this script.

==============================================================================
  Bugs                                                         *UltraBlog_Bugs*
==============================================================================

If you discover any bugs not listed here, please contact the |UltraBlog_Author|.

Or submit issues with Github's issues tracker:

    https://github.com/xbot/UltraBlog.vim/issues

==============================================================================
  History                                                   *UltraBlog_History*
==============================================================================

3.6.0
    * Feature: Add new options |ub_viewer_width| and |ub_viewer_width|, which
               define the default width and height of the built-in web browser.
    * Change:  The default width of the built-in web browser is now changed to
               900px.
    * Change:  Add an option 'xmlrpc_uri' in the initial settings, which make
               it possible for users to set custom XMLRPC access point.
    * Bugfix:  Fix the overwriting to auto commands created by other plugins.

3.5.0
    * Feature: Add a tiny web browser to do previewing, which starts much 
               faster than full-functional browsers like firefox and chromium.
               The later ones are still supported. The matter that whether or
               not to use the new previewer is controlled by a new option
               |ub_use_ubviewer|.
    * Bugfix:  Issue 7: Keywords highlighting is disabled in item lists, even 
               if searches are made manually.

3.4.0
    * Feature: Add the command |:UBRegexSearch|, doing full-text searches with
               regular expressions !
    * Feature: Add the command |:UBReplace|, doing full-text substitutions.
    * Feature: Add the command |:UBRegexReplace|, doing full-text substitutions
               with regular expressions.
    * Feature: Add commands |:UBEnableDebug|, |:UBDisableDebug|,
               |:UBToggleDebug| and an option |ub_debug|. In debug mode, SQL
               statements and stack traces of exceptions will be displayed.
    * Change:  Undo keywords highlighting after executing |:UBList|.
    * Bugfix:  Exceptions raised when opening the current item under cursor
               in item lists if the option |ub_hotkey_save_current_item| has
               not been set. Now this options comes with a default value.

3.3.0
    * Feature: Add i18n support !
    * Feature: Add a new option |ub_hotkey_save_current_item|, users can
               define their own hotkey for |:UBSave|.
    * Feature: Add a new option |ub_socket_timeout|, users can customize the
               timeout period in seconds, useful for slow networks.
    * Bugfix:  Exception raised when one event is processed by more than one
               event handlers.
    * Change:  Echoing messages now uses the command :echoerr instead of
               python's sys.stderr, because Vim crashes on this due to an
               upgrade recently.
    * Change:  Change commands |:UBSave|, |:UBSend|, |:UBUpload|, |:UBConv|,
               |:UBPreview| to be available only in their effective views.
    * Change:  Lists are set nowrapped.

3.2.0
    * Change:  |:UBConv| now depends on the python-html2text module when
               converts buffers from HTML to Markdown.
    * Change:  Change the domain name of my site to the new 0x3f.org.

3.1.0
    * Change:  The key "xmlrpc" of the settings list is dropped, a new one
               with the name "url" is added, you should set its value to the
               blog url.
    * Change:  Source code refactorings.
    * Change:  Solve the crash problem existing in MacVim only.
    * Change:  |:UBConv| can be used in any buffer.
    * Change:  |:UBThis| now has a third parameter, which enables convertions
               between syntaxes.
    * Bugfix:  The second parameter of |:UBThis| cannot take effect.

3.0.0
    * Feature: Mostly rewritten for implementing an event-driven system.
    * Feature: Context search comes with keywords highlighting. A new command
               |:UBFind| and a new option |ub_search_pagesize|.
    * Feature: Refresh every buffer with the new command |:UBRefresh|.
    * Bugfix:  Some.

2.3.1
    * Bugfix:  Listing remote posts will complain the error: local variable 
               'page_no' referenced before assignment.
    * Bugfix:  The editing window will be set as modified after being sent to
               blog when |ub_save_after_sent| is 0 and the buffer was in 
               unmodified status.

2.3.0
    * Feature: Preview posts/pages locally with pre-defined templates,
               template related operations and management.
    * Feature: Preview posts/pages after sending them to the blog.
    * Change:  Merge :UBPageNew to |:UBNew|, merge :UBPageOpen to |:UBOpen|, 
               merge :UBPageList to |:UBList|, merge :UBPageThis to |:UBThis|.
    * Bugfix:  The remote page list will raise an error when openned due to a
               change made in last version.
    * Bugfix:  The post/page list will raise an error when an item is deleted
               in it, caused by a change made in last version.

2.2.0
    * Change:  Merge :UBSave and :UBPageSave to |:UBSave|, merge :UBSend and 
               :UBPageSend to |:UBSend|.
    * Feature: Add an option |ub_tmpl_img_url| to customize a link template 
               string for the image uploaded by |:UBUpload|.

2.1.0
    * Change:  Increase the requirement to SQLAlchemy to version 0.7 or newer.
    * Feature: Now posts/pages can be opened in a new tab or splitted window.
    * Feature: Add options to let users customize hotkeys:
                   |ub_hotkey_open_item_in_current_view|
                   |ub_hotkey_open_item_in_splitted_view|
                   |ub_hotkey_open_item_in_tabbed_view|
                   |ub_hotkey_delete_item|

2.0.1
    * Bugfix:  Uploading media files may fail on Windows.
    * Bugfix:  An exception may be raised when Vim starts with no proper 
               configuration for UltraBlog.vim or some prerequisites are not
               met.

2.0
    * Feature: Add editor mode.
    * Feature: Add more syntaxes: LaTeX, reStructuredText and Textile.
    * Feature: Add command |:UBConv| to convert a post/page from one syntax to
               another.
    * Feature: Add options |ub_converter_command|, |ub_converter_options|, 
               |ub_converter_option_from|, |ub_converter_option_to| to specify 
               a custom extenal command in place of pandoc as the converter.
    * Feature: Add option |ub_save_after_opened| to control whether to save 
               posts/pages to database right after they are fetched from
               blogs.
    * Feature: Add option |ub_save_after_sent| to control whether to save
               posts/pages to database right after they are sent to blogs.

1.4
    * Feature: Add two commands: |:UBThis| and :UBPageThis, to create a new post 
               or page with content in the current buffer.

1.3
    * Feature: Record post statuses, post them in their recorded statuses when 
               omit parameters for |:UBSend| and :UBPageSend.
    * Feature: Display post/page status in post/page list, add an option 
               |ub_list_col3_width| to set its width.
    * Feature: Extend statuses to support private, pending and draft.
    * Feature: Change the status 'public' to 'publish'.
    * Feature: Check prerequesites in every top level functions.
    * BugFix:  Do not raise an error on startup when sqlalchemy is not installed.

1.2
    * Feature: Column widths can be set to custom values, which keep post or 
               page lists tidy. Two options added: |ub_list_col1_width| and 
               |ub_list_col2_width|.

1.1
    * Feature: Page management.
    * Feature: Add option |ub_append_promotion_link| to control whether to
               append a promotion link of UltraBlog.vim.
    * Bugfix:  Wrong order for parameters of commands |:UBOpen| and |:UBDel|
               in documentation.

1.0.5
    * Feature: Add documentation.
    * Feature: Use Vimball as the default distribution format.
    * Feature: Add two options - |ub_local_pagesize| and |ub_remote_pagesize|.

1.0.4
    * Fix the problem that an unexpected type exception is raised when UBList 
      is given some numbers as parameters.

1.0.3
    * Add a column in remote post list the same as the one in local post list, 
      which is used to display ids of local copies of corresponding posts.
    * Fix the problem that buffers can be reverted to what the previous views 
      contain throught the undo action.
    * Fix the minor problem that text won't wrap automatically in views opened 
      by the command :UBNew.

1.0.2
    * Fix the problem that Post.post_id won't be updated in database after a 
      new post is sent to blog.
    * Fix the problem that it prompts for confirmation to delete the remote copy 
      when deleting a post whose post_id is 0 from local post list.

1.0.1
    * Do not pop up an exception alert for the first time when Vim starts with 
      UltraBlog.vim installed and no configurations added to the vimrc file.

1.0
    * Initial version

==============================================================================
  License                                                   *UltraBlog_License*
==============================================================================

The New BSD License

==============================================================================
vim:tw=78:ts=4:ft=help:norl:fdm=marker
